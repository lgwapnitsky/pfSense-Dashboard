{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "iteration": 1644536390805,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 16,
      "panels": [],
      "title": "Hardware",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"system\")\n  |> filter(fn: (r) => r[\"_field\"] == \"n_users\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Active Users",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 50
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 2,
        "x": 2,
        "y": 1
      },
      "id": 6,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_system\")\n  |> filter(fn: (r) => r[\"cpu\"] == \"cpu-total\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "CPU Total",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.cpu}",
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 4,
        "y": 1
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "last"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_system\")\n  |> filter(fn: (r) => r[\"cpu\"] != \"cpu-total\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "CPU",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "right",
            "displayMode": "auto"
          },
          "displayName": "${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "idle"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 56
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "running"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sleeping"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 87
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "wait"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 66
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "zombies"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 91
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 11,
        "y": 1
      },
      "id": 10,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "hide": false,
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"processes\")\n  |> filter(fn: (r) => r[\"_field\"] == \"blocked\" or r[\"_field\"] == \"idle\" or r[\"_field\"] == \"running\" or r[\"_field\"] == \"sleeping\" or r[\"_field\"] == \"zombies\" or r[\"_field\"] == \"wait\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> limit(n:1)",
          "refId": "A"
        }
      ],
      "title": "Process Information",
      "transformations": [
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "Time"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "indexByName": {
              "Time": 0,
              "blocked {host=\"pfsense.wapnet.local.lan\", name=\"processes\"}": 5,
              "idle {host=\"pfsense.wapnet.local.lan\", name=\"processes\"}": 2,
              "running {host=\"pfsense.wapnet.local.lan\", name=\"processes\"}": 1,
              "sleeping {host=\"pfsense.wapnet.local.lan\", name=\"processes\"}": 3,
              "wait {host=\"pfsense.wapnet.local.lan\", name=\"processes\"}": 4,
              "zombies {host=\"pfsense.wapnet.local.lan\", name=\"processes\"}": 6
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 17,
        "y": 1
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"system\")\n  |> filter(fn: (r) => r[\"_field\"] == \"load1\" or r[\"_field\"] == \"load15\" or r[\"_field\"] == \"load5\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Load",
      "transformations": [
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "Time"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": false
            },
            "indexByName": {
              "Time": 0,
              "load1 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": 1,
              "load15 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": 3,
              "load5 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": 2
            },
            "renameByName": {
              "load1 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": "",
              "load15 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": ""
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "dtdhms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 4
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"system\")\n  |> filter(fn: (r) => r[\"_field\"] == \"uptime\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "System Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 11,
        "y": 4
      },
      "id": 12,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pf\")\n  |> filter(fn: (r) => r[\"_field\"] == \"match\" or r[\"_field\"] == \"state-insert\" or r[\"_field\"] == \"state-mismatch\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> limit(n:1)",
          "refId": "A"
        }
      ],
      "title": "PF Information",
      "transformations": [
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "Time"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "indexByName": {},
            "renameByName": {
              "match {host=\"pfsense.wapnet.local.lan\", name=\"pf\"}": "Match",
              "state-insert {host=\"pfsense.wapnet.local.lan\", name=\"pf\"}": "State-Insert",
              "state-mismatch {host=\"pfsense.wapnet.local.lan\", name=\"pf\"}": "State-Mismatch"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.path}",
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "used {device=\"ufsid/61eb5a18915669d1\", fstype=\"ufs\", host=\"pfsense.wapnet.local.lan\", mode=\"rw\", path=\"/\"}"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 7
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"disk\")\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\")\n  |> filter(fn: (r) => r[\"path\"] == \"/\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Disk Utilization",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "Tr_isUb7k"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 9,
        "x": 8,
        "y": 7
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "Tr_isUb7k"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mem\" or r[\"_measurement\"] == \"swap\")\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Memory Utilization",
      "transformations": [
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "Time"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "used_percent {host=\"pfsense.wapnet.local.lan\", name=\"mem\"}": "RAM used",
              "used_percent {host=\"pfsense.wapnet.local.lan\", name=\"swap\"}": "SWAP used"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 17,
        "y": 7
      },
      "id": 86,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \"degrees\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"temperature\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Temperature Sensors",
      "transformations": [
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "Time"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": false
            },
            "indexByName": {
              "Time": 0,
              "load1 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": 1,
              "load15 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": 3,
              "load5 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": 2
            },
            "renameByName": {
              "load1 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": "",
              "load15 {host=\"pfsense.wapnet.local.lan\", name=\"system\"}": ""
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 22,
      "panels": [],
      "title": "pfBlocker Stats",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 72
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 0,
        "y": 14
      },
      "id": 58,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"in\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> group()\n  |> top(n: 10)\n  |> drop(columns:[\"_start\",\"_stop\"])",
          "refId": "A"
        }
      ],
      "title": "IP - Top 10 Blocked - IN",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked",
              "src_ip": "Source IP",
              "tld": "Domain"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 72
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 3,
        "y": 14
      },
      "id": 59,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"out\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)\n  |> drop(columns:[\"_start\",\"_stop\"])",
          "refId": "A"
        }
      ],
      "title": "IP - Top 10 Blocked - OUT",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked",
              "src_ip": "Source IP",
              "tld": "Domain"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "Tr_isUb7k"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 6,
        "y": 14
      },
      "id": 68,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "Tr_isUb7k"
          },
          "hide": false,
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"in\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"_time\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> rename(columns: {\"_value\": \"Blocked Inbound\"})\n  |> group()",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "Tr_isUb7k"
          },
          "hide": false,
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"out\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"_time\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> rename(columns: {\"_value\": \"Blocked Outbound\"})\n\n  |> group()",
          "refId": "B"
        }
      ],
      "title": "IP - Blocked Packet Stats",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {}
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0
              },
              {
                "color": "#6ED0E0",
                "value": 10
              },
              {
                "color": "#EF843C",
                "value": 20
              },
              {
                "color": "#E24D42",
                "value": 30
              },
              {
                "color": "#1F78C1",
                "value": 40
              },
              {
                "color": "#BA43A9",
                "value": 50
              },
              {
                "color": "#705DA0",
                "value": 60
              },
              {
                "color": "#508642",
                "value": 70
              },
              {
                "color": "#CCA300",
                "value": 80
              },
              {
                "color": "#447EBC",
                "value": 90
              },
              {
                "color": "#C15C17",
                "value": 100
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 9,
        "y": 14
      },
      "id": 66,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "default"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "field": "_value",
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "size": {
                  "field": "_value",
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "location": {
              "geohash": "geoip_code",
              "lookup": "geoip_code",
              "mode": "lookup"
            },
            "name": "Layer 1",
            "type": "markers"
          }
        ],
        "view": {
          "id": "zero",
          "lat": 0,
          "lon": 0,
          "zoom": 1
        }
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"ip_evaluated\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"geoip_code\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> group()",
          "refId": "A"
        }
      ],
      "title": "IP  - Src/Dst Blocked Geo",
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 15,
        "y": 14
      },
      "id": 70,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "/^Value$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\n  |> group(columns: [\"tld\"], mode:\"by\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"_time\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> group()\n  ",
          "refId": "A"
        }
      ],
      "title": "DNSBL - Blocked Domain Queries",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 72
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 18,
        "y": 14
      },
      "id": 24,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\n  |> group(columns: [\"tld\"], mode:\"by\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\"], mode:\"by\")\n  |> count(column: \"_value\")\n  |> sort(columns: [\"_value\"], desc: true)\n  |> group()\n  |> top(n: 10)\n  |> drop(columns:[\"_start\",\"_stop\"])",
          "refId": "A"
        }
      ],
      "title": " DNSBL - Source IP - Top 10 Blocked",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked",
              "src_ip": "Source IP",
              "tld": "Domain"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 72
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 21,
        "y": 14
      },
      "id": 25,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"tld\"], mode:\"by\")\n  |> sort(columns: [\"_value\"], desc: true)\n  |> count()\n  |> group()\n  |> top(n: 10)\n\n  ",
          "refId": "A"
        }
      ],
      "title": "Top 10 DNSBL  Blocked Domains",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "tld": 0
            },
            "renameByName": {
              "_value": "Blocked",
              "tld": "Domain"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 72,
      "panels": [],
      "title": "pfBlocker Details",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 88
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 135
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 23
      },
      "id": 74,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"in\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\", \"dest_ip\",\"dest_port\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "IP - Top 10 Blocked - IN (by Host/Port)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 3,
              "dest_ip": 1,
              "dest_port": 2,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 76
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 144
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 6,
        "y": 23
      },
      "id": 76,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"in\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"dest_port\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "Port - Top 10 Blocked - IN",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 3,
              "dest_ip": 1,
              "dest_port": 2,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Port",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Feed Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 165
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 131
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 10,
        "y": 23
      },
      "id": 83,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "  from(bucket:\"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"blocktype\")\n  |> group(columns: [\"feed_name\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)\n  |> drop(columns: [\"_start\",\"_stop\"])",
          "refId": "A"
        }
      ],
      "title": "Top 10 DNSBL Feeds",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "_value": "Blocked Count",
              "feed_name": "Feed Name"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 76
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 144
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 15,
        "y": 23
      },
      "id": 81,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"out\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"dest_port\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "Port - Top 10 Blocked - OUT",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 3,
              "dest_ip": 1,
              "dest_port": 2,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Port",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 88
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 135
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 23
      },
      "id": 78,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"out\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\", \"dest_ip\",\"dest_port\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "IP - Top 10 Blocked - OUT (by Host/Port)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 3,
              "dest_ip": 1,
              "dest_port": 2,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Protocol"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 86
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 133
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 30
      },
      "id": 75,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"in\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\", \"dest_ip\",\"protocol\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "IP - Top 10 Blocked - IN (by Host/Protocol)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 3,
              "dest_ip": 1,
              "protocol": 2,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "protocol": "Protocol",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 76
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Protocol"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 82
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 6,
        "y": 30
      },
      "id": 77,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"in\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"protocol\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "Protocol - Top 10 Blocked - IN",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "protocol": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Port",
              "protocol": "Protocol",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Feed Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 176
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 117
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 10,
        "y": 30
      },
      "id": 84,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": " from(bucket:\"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"action\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"feed_name\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)\n  |> drop(columns: [\"_start\",\"_stop\"])\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Top 10 IP Block Feeds",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "_value": "Blocked Count",
              "feed_name": "Feed Name"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 76
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Protocol"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 82
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 15,
        "y": 30
      },
      "id": 80,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"out\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"protocol\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "Protocol - Top 10 Blocked - OUT",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 1,
              "protocol": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Port",
              "protocol": "Protocol",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Protocol"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 86
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 133
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 30
      },
      "id": 79,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n  |> filter(fn: (r) => r[\"_field\"] == \"direction\")\n  |> filter(fn: (r) => r[\"_value\"] == \"out\")\n  |> group(columns: [\"src_ip\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"src_ip\", \"dest_ip\",\"protocol\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> top(n: 10)",
          "refId": "A"
        }
      ],
      "title": "IP - Top 10 Blocked - OUT (by Host/Protocol)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 3,
              "dest_ip": 1,
              "protocol": 2,
              "src_ip": 0
            },
            "renameByName": {
              "_value": "Blocked Count",
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "protocol": "Protocol",
              "src_ip": "Source IP"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "id": 29,
      "panels": [],
      "title": "Network Stats",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 38
      },
      "id": 42,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\n  |> filter(fn: (r) => r[\"_field\"] == \"delay\")\n  |> filter(fn: (r) => r[\"gateway_name\"] =~ /^${WAN_GW:regex}/)\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Gateway RTT - ${WAN_GW}",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*name\\=\"(.*)\\\"\\,\\ h.*e\\=\\\"(.*)\\\"\\}",
            "renamePattern": "$1 - $2"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "filterable": true
          },
          "mappings": [
            {
              "options": {
                "false": {
                  "color": "red",
                  "index": 1,
                  "text": "Offline"
                },
                "true": {
                  "color": "green",
                  "index": 0,
                  "text": "Online"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 16,
        "x": 8,
        "y": 38
      },
      "id": 57,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: -1m, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"_field\"] == \"status\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group(columns: [\"friendlyname\"])\n  |> last()\n  |> group()\n  |> drop(columns: [\"_field\",\"_time\",\"source\",\"_start\",\"_stop\",\"_measurement\",\"host\", \"ip4_subnet\",\"ip6_subnet\"])",
          "refId": "A"
        }
      ],
      "title": "Interface Summary",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_value": 5,
              "friendlyname": 1,
              "ip4_address": 2,
              "ip6_address": 3,
              "mac_address": 4,
              "name": 0
            },
            "renameByName": {
              "_value": "Status",
              "friendlyname": "Friendly Name",
              "ip4_address": "IPv4 Address",
              "ip6_address": "IPv6 Address",
              "mac_address": "Hardware Address",
              "name": "Interface"
            }
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "boolean",
                "targetField": "Status"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 46
      },
      "id": 48,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\n  |> filter(fn: (r) => r[\"_field\"] == \"loss\")\n  |> filter(fn: (r) => r[\"gateway_name\"] =~ /^${WAN_GW:regex}/)\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Gateway Loss - ${WAN_GW}",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*name\\=\"(.*)\\\"\\,\\ h.*e\\=\\\"(.*)\\\"\\}",
            "renamePattern": "$1 - $2"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "center",
            "displayMode": "color-text",
            "filterable": true
          },
          "mappings": [
            {
              "options": {
                "down": {
                  "color": "red",
                  "index": 3,
                  "text": "Down"
                },
                "false": {
                  "index": 1,
                  "text": "False"
                },
                "online": {
                  "color": "green",
                  "index": 2,
                  "text": "Online"
                },
                "true": {
                  "index": 0,
                  "text": "True"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "gwdescr"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 354
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Gateway Description"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 333
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "substatus"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 130
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 16,
        "x": 8,
        "y": 46
      },
      "id": 55,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "intInfo = \nfrom(bucket: \"${dataSource}\")\n  |> range(start: -1m, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"_field\"] == \"status\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> rename(columns: {ip4_address: \"ipaddress\", name: \"interface\"})\n\n\ngwInfo = \nfrom(bucket: \"${dataSource}\")\n  |> range(start: -1m, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\n |> filter(fn: (r) => r[\"_field\"] == \"source\" or r[\"_field\"] == \"status\" or  r[\"_field\"] == \"gwdescr\" or r[\"_field\"] == \"monitor\" or r[\"_field\"] == \"defaultgw\" or r[\"_field\"] == \"substatus\")\n  |> filter(fn: (r) => r[\"gateway_name\"] =~ /${WAN_GW:regex}/)\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> drop(columns: [\"_time\"])\n  |> rename(columns: {source: \"ipaddress\"})\n\n\n   \njoin(\n    tables: {gwInfo: gwInfo, intInfo: intInfo},\n    on: [\"interface\"],\n)\n  |> group(columns: [\"gateway_name\"])\n\n  |> last(column: \"friendlyname\")\n  |> group()\n  |> keep(columns: [\"gwdescr\",\"interface\",\"ipaddress_gwInfo\",\"monitor\",\"name\",\"status\", \"defaultgw\", \"substatus\"])",
          "refId": "A"
        }
      ],
      "title": "GATEWAY SUMMARY - ${WAN_GW}",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "defaultgw": 4,
              "gwdescr": 1,
              "interface": 0,
              "ipaddress_gwInfo": 2,
              "monitor": 3,
              "status": 5
            },
            "renameByName": {
              "defaultgw": "Default Gateway",
              "gwdescr": "Gateway Description",
              "interface": "Interface",
              "ipaddress_gwInfo": "Gateway IP",
              "monitor": "Monitor IP",
              "status": "Status"
            }
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "boolean",
                "targetField": "defaultgw"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 54
      },
      "id": 27,
      "panels": [],
      "repeat": "NetInterface",
      "title": "${NetInterface}",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "Tr_isUb7k"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 55
      },
      "id": 31,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "Tr_isUb7k"
          },
          "query": "from(bucket: \"${dataSource}\")\n  |> range(start: -1m, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"friendlyname\"] == \"${NetInterface}\")\n  |> keep(columns:[\"name\",\"friendlyname\",\"ip4_address\",\"ip6_address\",\"mac_address\"])\n  |> unique(column: \"friendlyname\")\n  |> group(columns:[\"interface\"])",
          "refId": "A"
        }
      ],
      "title": "Interface Summary",
      "transformations": [],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "Tr_isUb7k"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 0,
        "y": 58
      },
      "id": 33,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "Tr_isUb7k"
          },
          "hide": false,
          "query": "intInfo =   from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"friendlyname\"] == \"${NetInterface}\")\n  |> distinct(column: \"friendlyname\")\n  |> keep(columns: [\"name\"])\n  |> rename(columns: {name: \"interface\"})\n\n\nnetStats = \nfrom(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bytes_recv\" or r[\"_field\"] == \"bytes_sent\")\n  |> derivative(unit: 1s, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")\n  \n\n \njoin(\n    tables: {netStats: netStats, intInfo: intInfo},\n    on: [\"interface\"],\n)",
          "refId": "A"
        }
      ],
      "title": "${NetInterface} Traffic",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*sent.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "Bytes Sent - $1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*recv.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "Bytes Received - $1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 8,
        "y": 58
      },
      "id": 35,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "intInfo =   from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"friendlyname\"] == \"${NetInterface}\")\n  |> distinct(column: \"friendlyname\")\n  |> keep(columns: [\"name\"])\n  |> rename(columns: {name: \"interface\"})\n\n\nnetStats = \nfrom(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bytes_recv\" or r[\"_field\"] == \"bytes_sent\")\n  |> derivative(unit: 1s, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")\n  \n\n \njoin(\n    tables: {netStats: netStats, intInfo: intInfo},\n    on: [\"interface\"],\n)",
          "refId": "A"
        }
      ],
      "title": "${NetInterface} Traffic - bits per second",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*recv.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "Bytes Received - $1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*sent.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "Bytes Sent - $1"
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 12,
        "y": 58
      },
      "id": 85,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "intInfo =   from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"friendlyname\"] == \"${NetInterface}\")\n  |> distinct(column: \"friendlyname\")\n  |> keep(columns: [\"name\"])\n  |> rename(columns: {name: \"interface\"})\n\n\nnetStats = \nfrom(bucket: \"${dataSource}\")\n  |> range(start: -30d, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bytes_recv\" or r[\"_field\"] == \"bytes_sent\")\n  |> derivative(unit: 30d, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")\n  |> aggregateWindow(every: 1d, fn: mean)\n  \n\n \njoin(\n    tables: {netStats: netStats, intInfo: intInfo},\n    on: [\"interface\"],\n)",
          "refId": "A"
        }
      ],
      "title": "${NetInterface} - Monthly",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*recv.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "Bytes Received - $1"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*sent.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "Bytes Sent - $1"
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "Tr_isUb7k"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 16,
        "y": 58
      },
      "id": 34,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.3.0-beta2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "Tr_isUb7k"
          },
          "hide": false,
          "query": "intInfo =   from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> filter(fn: (r) => r[\"friendlyname\"] == \"${NetInterface}\")\n  |> distinct(column: \"friendlyname\")\n  |> keep(columns: [\"name\"])\n  |> rename(columns: {name: \"interface\"})\n\n\nnetStats = \nfrom(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\n  |> filter(fn: (r) => r[\"_field\"] == \"packets_recv\" or r[\"_field\"] == \"packets_sent\")\n  |> derivative(unit: 1s, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")\n  \n\n \njoin(\n    tables: {netStats: netStats, intInfo: intInfo},\n    on: [\"interface\"],\n)",
          "refId": "A"
        }
      ],
      "title": "${NetInterface} Throughput",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*recv.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "$1 - Packets Received"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*sent.*interface\\=\\\"(.*)\\\"\\}",
            "renamePattern": "$1 - Packets Sent"
          }
        }
      ],
      "type": "timeseries"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 33,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "pfsense_201",
          "value": "pfsense_201"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "dataSource",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "^pf.*",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": [
            "USERLAN"
          ],
          "value": [
            "USERLAN"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "Tr_isUb7k"
        },
        "definition": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> group(columns:[\"_measurement\"])\n  |> unique(column:\"friendlyname\")\n  |> keep(columns:[\"friendlyname\",\"name\",\"ip4_address\",\"ip6_address\"])\n  ",
        "hide": 0,
        "includeAll": false,
        "label": "Network Interface",
        "multi": true,
        "name": "NetInterface",
        "options": [],
        "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\n  |> group(columns:[\"_measurement\"])\n  |> unique(column:\"friendlyname\")\n  |> keep(columns:[\"friendlyname\",\"name\",\"ip4_address\",\"ip6_address\"])\n  ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "${dataSource}"
        },
        "definition": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\n  |> filter(fn: (r) => r[\"_field\"] == \"defaultgw\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> unique(column:\"interface\")\n  |> group(columns:[\"interface\", \"gateway_name\"])\n  |> group()\n  |> keep(columns:[\"gateway_name\",\"interface\"])",
        "hide": 0,
        "includeAll": true,
        "label": "WAN Gateway",
        "multi": true,
        "name": "WAN_GW",
        "options": [],
        "query": "from(bucket: \"${dataSource}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\n  |> filter(fn: (r) => r[\"_field\"] == \"defaultgw\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> unique(column:\"interface\")\n  |> group(columns:[\"interface\", \"gateway_name\"])\n  |> group()\n  |> keep(columns:[\"gateway_name\",\"interface\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "PFSense",
  "uid": "hxRS_8b7z",
  "version": 124,
  "weekStart": ""
}
